import 'package:flutter/cupertino.dart';
import 'package:flutter/material.dart';
import 'package:xpindo/constant.dart';
import 'package:xpindo/helper/data.dart';
import 'package:xpindo/screen/detailsplace/detailplace.dart';

class MyHomePage extends StatefulWidget {
  static String routeName = "/myhomepage";
  MyHomePage({Key? key, required this.title}) : super(key: key);
  final String title;

  @override
  _MyHomePageState createState() => _MyHomePageState();
}

class _MyHomePageState extends State<MyHomePage> {
  List<NavigationItem> navigationItems = getNavigationItemList();
  late NavigationItem selectedItem;
  List<Place> places = getPlaceList();
  List<NewPlace> Nplaces = getNewPlaceList();
  List<Destination> destinations = getDestinationList();
  List<Featured> featureds = getFeaturedList();
  final List<Widget> _children = [];
  @override
  void initState() {
    // TODO: implement initState
    super.initState();
    setState(() {
      selectedItem = navigationItems[0];
    });
  }

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      backgroundColor: kBackgroundColor,
      resizeToAvoidBottomInset: false,
      appBar: AppBar(
        leading: Container(
          child: Padding(
            padding: EdgeInsets.all(7.0),
            child: Image.asset("assets/menu.png", height: 20, width: 20),
          ),
        ),
        elevation: 0.0,
        title: Row(
          mainAxisAlignment: MainAxisAlignment.center,
          children: [
            Image.asset(
              "assets/icons/logo.png",
              height: 26,
            ),
            Text(
              "Expose",
              style: TextStyle(
                  color: Colors.black38,
                  fontWeight: FontWeight.bold,
                  fontStyle: FontStyle.italic),
            ),
            Text(
              " Indonesia",
              style:
                  TextStyle(color: Colors.black54, fontWeight: FontWeight.bold),
            )
          ],
        ),
        actions: [
          Container(
              padding: EdgeInsets.symmetric(horizontal: 16),
              child: Icon(
                Icons.ac_unit,
                color: Colors.white,
              ))
        ],
      ),
      body: Column(
        crossAxisAlignment: CrossAxisAlignment.start,
        children: [
          Expanded(
              child: Container(
            padding: EdgeInsets.only(top: 8, left: 16),
            child: ListView(
              physics: BouncingScrollPhysics(),
              scrollDirection: Axis.horizontal,
              children: buildPlaces(),
            ),
          )),
          Container(
            height: 80,
            padding: EdgeInsets.only(top: 8, left: 16),
            child: ListView(
              physics: BouncingScrollPhysics(),
              scrollDirection: Axis.horizontal,
              children: buildDestinations(),
            ),
          ),
          Padding(
            padding: EdgeInsets.symmetric(horizontal: 16, vertical: 8),
            child: Text(
              "Top 5 Feature Places Near By",
              style:
                  TextStyle(fontWeight: FontWeight.bold, color: Colors.black54),
            ),
          ),
          Container(
            height: 90,
            child: PageView(
              physics: BouncingScrollPhysics(),
              children: buildFeatureds(),
            ),
          ),
          Padding(
            padding: EdgeInsets.symmetric(horizontal: 16, vertical: 8),
            child: Text(
              "Top 5 Events Near By",
              style:
                  TextStyle(fontWeight: FontWeight.bold, color: Colors.black54),
            ),
          ),
          Container(
            height: 90,
            child: PageView(
              physics: BouncingScrollPhysics(),
              children: buildFeatureds(),
            ),
          ),
          Padding(
            padding: EdgeInsets.symmetric(horizontal: 16, vertical: 8),
            child: Text(
              "Promo and Discount",
              style:
                  TextStyle(fontWeight: FontWeight.bold, color: Colors.black54),
            ),
          ),
          Container(
            height: 90,
            child: PageView(
              physics: BouncingScrollPhysics(),
              children: buildFeatureds(),
            ),
          ),
        ],
      ),
      // bottomNavigationBar: Container(
      //   height: 60,
      //   margin: EdgeInsets.symmetric(horizontal: 16, vertical: 8),
      //   decoration: BoxDecoration(
      //       color: Colors.white,
      //       borderRadius: BorderRadius.only(
      //           topLeft: Radius.circular(10),
      //           topRight: Radius.circular(10),
      //           bottomLeft: Radius.circular(30),
      //           bottomRight: Radius.circular(30))),
      //   child: Row(
      //     mainAxisAlignment: MainAxisAlignment.spaceEvenly,
      //     children: buildNavigationItems(),
      //   ),
      // ),

      // This trailing comma makes auto-formatting nicer for build methods.
    );
  }

  List<Widget> buildPlaces() {
    List<Widget> list = [];
    for (var place in Nplaces) {
      list.add(buildPlace(place));
    }
    return list;
  }

  Widget buildPlace(NewPlace place) {
    return GestureDetector(
      onTap: () {
        Navigator.push(
            context,
            MaterialPageRoute(
                builder: (context) => DetailPlacePage(place: place)));
      },
      child: Card(
        elevation: 2.0,
        clipBehavior: Clip.antiAlias,
        shape: RoundedRectangleBorder(
            borderRadius: BorderRadius.all(Radius.circular(15))),
        child: Hero(
          tag: place.images[0],
          child: Container(
            width: 230,
            decoration: BoxDecoration(
                image: DecorationImage(
                    image: AssetImage(place.images[0]), fit: BoxFit.cover)),
            child: Stack(
              children: [
                Padding(
                  padding: EdgeInsets.only(left: 12, top: 12),
                  child: Align(
                    alignment: Alignment.topLeft,
                    child: Icon(
                      Icons.rss_feed,
                      color: Colors.white,
                      size: 30,
                    ),
                  ),
                ),
                Padding(
                  padding: EdgeInsets.only(left: 12, bottom: 12, right: 12),
                  child: Align(
                    alignment: Alignment.bottomLeft,
                    child: Column(
                      crossAxisAlignment: CrossAxisAlignment.start,
                      mainAxisAlignment: MainAxisAlignment.end,
                      children: [
                        Text(
                          place.title,
                          style: TextStyle(
                              color: Colors.white,
                              fontSize: 24,
                              fontWeight: FontWeight.bold),
                        ),
                        SizedBox(
                          height: 4,
                        ),
                        Text(
                          place.country,
                          style: TextStyle(
                              color: Colors.white,
                              fontSize: 24,
                              fontWeight: FontWeight.bold),
                        )
                        // Row(
                        //   children: [
                        //     Icon(
                        //       Icons.location_on,
                        //       color: Colors.white,
                        //       size: 30,
                        //     ),
                        //     SizedBox(width: 4),
                        //     Text(
                        //       place.country,
                        //       style: TextStyle(
                        //           color: Colors.white,
                        //           fontSize: 30,
                        //           fontWeight: FontWeight.bold),
                        //     )
                        //   ],
                        // )
                      ],
                    ),
                  ),
                )
              ],
            ),
          ),
        ),
      ),
    );
  }

  List<Widget> buildDestinations() {
    List<Widget> list = [];
    for (var destination in destinations) {
      list.add(buildDestination(destination));
    }
    return list;
  }

  Widget buildDestination(Destination destination) {
    return Card(
      elevation: 1,
      clipBehavior: Clip.antiAlias,
      shape: RoundedRectangleBorder(
          borderRadius: BorderRadius.all(Radius.circular(15))),
      child: Padding(
        padding: const EdgeInsets.all(2.0),
        child: Container(
          width: 140,
          child: Padding(
            padding: EdgeInsets.symmetric(horizontal: 16, vertical: 1),
            child: Column(
              crossAxisAlignment: CrossAxisAlignment.start,
              mainAxisAlignment: MainAxisAlignment.center,
              children: [
                Image.asset(
                  destination.iconUrl,
                  height: 32,
                  fit: BoxFit.fitHeight,
                  color: destination.iconColor,
                ),
                SizedBox(
                  height: 4,
                ),
                Text(
                  destination.country,
                  style: TextStyle(
                      color: Colors.black54,
                      fontSize: 16,
                      fontWeight: FontWeight.bold),
                ),
                // Text(
                //   destination.city,
                //   style: TextStyle(
                //     color: Colors.black38,
                //     fontSize: 14,
                //   ),
                // )
              ],
            ),
          ),
        ),
      ),
    );
  }

  //
  List<Widget> buildFeatureds() {
    List<Widget> list = [];
    for (var featured in featureds) {
      list.add(buildFeatured(featured));
    }
    return list;
  }

  Widget buildFeatured(Featured featured) {
    return Padding(
      padding: EdgeInsets.symmetric(horizontal: 12),
      child: Card(
        elevation: 0,
        clipBehavior: Clip.antiAlias,
        shape: RoundedRectangleBorder(
            borderRadius: BorderRadius.all(Radius.circular(15))),
        child: Container(
          decoration: BoxDecoration(
              image: DecorationImage(
                  image: AssetImage(featured.imageUrl), fit: BoxFit.cover)),
          child: Padding(
            padding: EdgeInsets.symmetric(horizontal: 16),
            child: Column(
              crossAxisAlignment: CrossAxisAlignment.start,
              mainAxisAlignment: MainAxisAlignment.center,
              children: [
                Text(
                  featured.year,
                  style: TextStyle(
                      fontSize: 24,
                      fontWeight: FontWeight.bold,
                      color: Colors.white),
                ),
                SizedBox(
                  height: 4,
                ),
                Text(
                  featured.title,
                  style: TextStyle(
                      fontSize: 16,
                      fontWeight: FontWeight.bold,
                      color: Colors.white),
                ),
              ],
            ),
          ),
        ),
      ),
    );
  }

  List<Widget> buildNavigationItems() {
    List<Widget> list = [];
    for (var navigation in navigationItems) {
      list.add(buildNavigationItem(navigation));
    }
    return list;
  }

  Widget buildNavigationItem(NavigationItem item) {
    return GestureDetector(
      onTap: () {
        setState(() {
          selectedItem = item;
        });
      },
      child: Container(
        width: 50,
        child: Stack(
          children: [
            Align(
              alignment: Alignment.topCenter,
              child: Container(
                  width: 40,
                  height: 3,
                  color: selectedItem == item
                      ? kPrimaryColor
                      : Colors.transparent),
            ),
            Center(
              child: Icon(
                item.iconData,
                color: selectedItem == item ? kPrimaryColor : Colors.grey[400],
                size: 28,
              ),
            )
          ],
        ),
      ),
    );
  }
}
